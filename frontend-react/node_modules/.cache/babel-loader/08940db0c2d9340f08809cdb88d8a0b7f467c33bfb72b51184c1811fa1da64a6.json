{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabyg\\\\Downloads\\\\prueba3\\\\prueba\\\\prueba\\\\frontend-react\\\\src\\\\components\\\\VistaEntrada.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VistaEntrada({\n  usuario,\n  onLogout\n}) {\n  _s();\n  const [mensaje, setMensaje] = useState('');\n  const registrarEntrada = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/registro-entrada', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usuarioId: usuario.id\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        setMensaje('Error al registrar entrada: ' + errorData.error);\n      } else {\n        const data = await response.json();\n        setMensaje('✅ Entrada registrada correctamente. ID: ' + data.id);\n      }\n    } catch (error) {\n      setMensaje('❌ Error en la conexión: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gradient-to-br from-indigo-400 to-purple-500 px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl shadow-lg p-8 w-full max-w-md text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-indigo-600 mb-2\",\n        children: [\"Bienvenido, \", usuario.nombre, \" \", usuario.apellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 mb-6\",\n        children: [\"Correo: \", usuario.correo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: registrarEntrada,\n        className: \"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 transition-colors mb-4\",\n        children: \"Registrar Entrada\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), mensaje && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-3 rounded-lg text-sm font-medium mb-4 ${mensaje.includes('correctamente') ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`,\n        children: mensaje\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        className: \"w-full bg-gray-500 text-white py-2 rounded-lg hover:bg-gray-600 transition-colors\",\n        children: \"Cerrar Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(VistaEntrada, \"2RQ05gSzmECeLq9fMJUONj+zZJQ=\");\n_c = VistaEntrada;\nexport default VistaEntrada;\nvar _c;\n$RefreshReg$(_c, \"VistaEntrada\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VistaEntrada","usuario","onLogout","_s","mensaje","setMensaje","registrarEntrada","response","fetch","method","headers","body","JSON","stringify","usuarioId","id","ok","errorData","json","error","data","message","className","children","nombre","apellido","fileName","_jsxFileName","lineNumber","columnNumber","correo","onClick","includes","_c","$RefreshReg$"],"sources":["C:/Users/gabyg/Downloads/prueba3/prueba/prueba/frontend-react/src/components/VistaEntrada.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction VistaEntrada({ usuario, onLogout }) {\r\n  const [mensaje, setMensaje] = useState('');\r\n\r\n  const registrarEntrada = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3000/api/registro-entrada', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ usuarioId: usuario.id })\r\n      });\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        setMensaje('Error al registrar entrada: ' + errorData.error);\r\n      } else {\r\n        const data = await response.json();\r\n        setMensaje('✅ Entrada registrada correctamente. ID: ' + data.id);\r\n      }\r\n    } catch (error) {\r\n      setMensaje('❌ Error en la conexión: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-indigo-400 to-purple-500 px-4\">\r\n      <div className=\"bg-white rounded-2xl shadow-lg p-8 w-full max-w-md text-center\">\r\n        <h2 className=\"text-2xl font-bold text-indigo-600 mb-2\">\r\n          Bienvenido, {usuario.nombre} {usuario.apellido}\r\n        </h2>\r\n        <p className=\"text-gray-600 mb-6\">Correo: {usuario.correo}</p>\r\n\r\n        <button\r\n          onClick={registrarEntrada}\r\n          className=\"w-full bg-green-600 text-white py-2 rounded-lg hover:bg-green-700 transition-colors mb-4\"\r\n        >\r\n          Registrar Entrada\r\n        </button>\r\n\r\n        {mensaje && (\r\n          <div\r\n            className={`p-3 rounded-lg text-sm font-medium mb-4 ${\r\n              mensaje.includes('correctamente')\r\n                ? 'bg-green-100 text-green-800'\r\n                : 'bg-red-100 text-red-800'\r\n            }`}\r\n          >\r\n            {mensaje}\r\n          </div>\r\n        )}\r\n\r\n        <button\r\n          onClick={onLogout}\r\n          className=\"w-full bg-gray-500 text-white py-2 rounded-lg hover:bg-gray-600 transition-colors\"\r\n        >\r\n          Cerrar Sesión\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VistaEntrada;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAC;EAAEC,OAAO;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;QACzEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,SAAS,EAAEb,OAAO,CAACc;QAAG,CAAC;MAChD,CAAC,CAAC;MACF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACvCb,UAAU,CAAC,8BAA8B,GAAGY,SAAS,CAACE,KAAK,CAAC;MAC9D,CAAC,MAAM;QACL,MAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACW,IAAI,CAAC,CAAC;QAClCb,UAAU,CAAC,0CAA0C,GAAGe,IAAI,CAACL,EAAE,CAAC;MAClE;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdd,UAAU,CAAC,0BAA0B,GAAGc,KAAK,CAACE,OAAO,CAAC;IACxD;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,oGAAoG;IAAAC,QAAA,eACjHxB,OAAA;MAAKuB,SAAS,EAAC,gEAAgE;MAAAC,QAAA,gBAC7ExB,OAAA;QAAIuB,SAAS,EAAC,yCAAyC;QAAAC,QAAA,GAAC,cAC1C,EAACtB,OAAO,CAACuB,MAAM,EAAC,GAAC,EAACvB,OAAO,CAACwB,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eACL9B,OAAA;QAAGuB,SAAS,EAAC,oBAAoB;QAAAC,QAAA,GAAC,UAAQ,EAACtB,OAAO,CAAC6B,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE9D9B,OAAA;QACEgC,OAAO,EAAEzB,gBAAiB;QAC1BgB,SAAS,EAAC,0FAA0F;QAAAC,QAAA,EACrG;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERzB,OAAO,iBACNL,OAAA;QACEuB,SAAS,EAAE,2CACTlB,OAAO,CAAC4B,QAAQ,CAAC,eAAe,CAAC,GAC7B,6BAA6B,GAC7B,yBAAyB,EAC5B;QAAAT,QAAA,EAEFnB;MAAO;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACN,eAED9B,OAAA;QACEgC,OAAO,EAAE7B,QAAS;QAClBoB,SAAS,EAAC,mFAAmF;QAAAC,QAAA,EAC9F;MAED;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1B,EAAA,CA5DQH,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA8DrB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}