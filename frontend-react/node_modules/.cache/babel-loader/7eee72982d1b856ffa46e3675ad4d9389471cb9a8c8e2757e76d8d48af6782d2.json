{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabyg\\\\Downloads\\\\prueba este si\\\\prueba\\\\frontend-react\\\\src\\\\components\\\\GestionHorariosCalendario.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GestionHorariosCalendario.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daysOfWeek = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\n\n// Función para obtener las fechas de la semana actual (lunes a domingo)\nconst getCurrentWeekDates = () => {\n  const current = new Date();\n  const first = current.getDate() - current.getDay() + 1; // lunes\n  const dates = [];\n  for (let i = 0; i < 7; i++) {\n    const d = new Date(current.setDate(first + i));\n    dates.push(new Date(d));\n  }\n  return dates;\n};\n\n// Formatear hora para mostrar en bloques\nconst formatTime = timeStr => {\n  if (!timeStr) return '';\n  const [hour, minute] = timeStr.split(':');\n  return `${hour}:${minute}`;\n};\nconst GestionHorariosCalendario = ({\n  usuarios,\n  horarios\n}) => {\n  _s();\n  const [weekDates, setWeekDates] = useState(getCurrentWeekDates());\n\n  // Mapear horarios por usuario y día para acceso rápido\n  const horariosMap = {};\n  horarios.forEach(h => {\n    if (!horariosMap[h.empleado_id]) horariosMap[h.empleado_id] = {};\n    horariosMap[h.empleado_id][h.dia.toLowerCase()] = h;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gestion-horarios-calendario\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calendario de Horarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"calendario-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Equipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), weekDates.map((date, idx) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: [daysOfWeek[idx], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 34\n            }, this), date.getDate()]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: usuarios.map(usuario => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"usuario-nombre\",\n            children: [usuario.nombre_completo, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"usuario-rol\",\n              children: usuario.rol || 'Empleado'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), daysOfWeek.map((day, idx) => {\n            var _horariosMap$usuario$;\n            const diaLower = day.toLowerCase();\n            const horario = (_horariosMap$usuario$ = horariosMap[usuario.uid]) === null || _horariosMap$usuario$ === void 0 ? void 0 : _horariosMap$usuario$[diaLower];\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"celda-horario\",\n              children: horario ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `bloque-horario ${horario.tipo || 'oficina'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"turno-nombre\",\n                  children: horario.turno || 'Oficinas'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"horario-horas\",\n                  children: [formatTime(horario.hora_inicio), \" - \", formatTime(horario.hora_fin)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bloque-descanso\",\n                children: \"D\\xEDa de descanso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 23\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this);\n          })]\n        }, usuario.uid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(GestionHorariosCalendario, \"qus8ck90D34DfGkmWd97HPpz62Y=\");\n_c = GestionHorariosCalendario;\nexport default GestionHorariosCalendario;\nvar _c;\n$RefreshReg$(_c, \"GestionHorariosCalendario\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","daysOfWeek","getCurrentWeekDates","current","Date","first","getDate","getDay","dates","i","d","setDate","push","formatTime","timeStr","hour","minute","split","GestionHorariosCalendario","usuarios","horarios","_s","weekDates","setWeekDates","horariosMap","forEach","h","empleado_id","dia","toLowerCase","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","date","idx","usuario","nombre_completo","rol","day","_horariosMap$usuario$","diaLower","horario","uid","tipo","turno","hora_inicio","hora_fin","_c","$RefreshReg$"],"sources":["C:/Users/gabyg/Downloads/prueba este si/prueba/frontend-react/src/components/GestionHorariosCalendario.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './GestionHorariosCalendario.css';\r\n\r\nconst daysOfWeek = ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'];\r\n\r\n// Función para obtener las fechas de la semana actual (lunes a domingo)\r\nconst getCurrentWeekDates = () => {\r\n  const current = new Date();\r\n  const first = current.getDate() - current.getDay() + 1; // lunes\r\n  const dates = [];\r\n  for (let i = 0; i < 7; i++) {\r\n    const d = new Date(current.setDate(first + i));\r\n    dates.push(new Date(d));\r\n  }\r\n  return dates;\r\n};\r\n\r\n// Formatear hora para mostrar en bloques\r\nconst formatTime = (timeStr) => {\r\n  if (!timeStr) return '';\r\n  const [hour, minute] = timeStr.split(':');\r\n  return `${hour}:${minute}`;\r\n};\r\n\r\nconst GestionHorariosCalendario = ({ usuarios, horarios }) => {\r\n  const [weekDates, setWeekDates] = useState(getCurrentWeekDates());\r\n\r\n  // Mapear horarios por usuario y día para acceso rápido\r\n  const horariosMap = {};\r\n  horarios.forEach((h) => {\r\n    if (!horariosMap[h.empleado_id]) horariosMap[h.empleado_id] = {};\r\n    horariosMap[h.empleado_id][h.dia.toLowerCase()] = h;\r\n  });\r\n\r\n  return (\r\n    <div className=\"gestion-horarios-calendario\">\r\n      <h2>Calendario de Horarios</h2>\r\n      <table className=\"calendario-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Equipo</th>\r\n            {weekDates.map((date, idx) => (\r\n              <th key={idx}>\r\n                {daysOfWeek[idx]}<br />\r\n                {date.getDate()}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {usuarios.map((usuario) => (\r\n            <tr key={usuario.uid}>\r\n              <td className=\"usuario-nombre\">\r\n                {usuario.nombre_completo}<br />\r\n                <span className=\"usuario-rol\">{usuario.rol || 'Empleado'}</span>\r\n              </td>\r\n              {daysOfWeek.map((day, idx) => {\r\n                const diaLower = day.toLowerCase();\r\n                const horario = horariosMap[usuario.uid]?.[diaLower];\r\n                return (\r\n                  <td key={idx} className=\"celda-horario\">\r\n                    {horario ? (\r\n                      <div className={`bloque-horario ${horario.tipo || 'oficina'}`}>\r\n                        <div className=\"turno-nombre\">{horario.turno || 'Oficinas'}</div>\r\n                        <div className=\"horario-horas\">\r\n                          {formatTime(horario.hora_inicio)} - {formatTime(horario.hora_fin)}\r\n                        </div>\r\n                      </div>\r\n                    ) : (\r\n                      <div className=\"bloque-descanso\">Día de descanso</div>\r\n                    )}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GestionHorariosCalendario;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}