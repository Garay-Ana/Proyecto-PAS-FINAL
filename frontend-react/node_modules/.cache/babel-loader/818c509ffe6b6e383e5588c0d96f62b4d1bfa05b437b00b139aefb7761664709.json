{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gabyg\\\\Downloads\\\\prueba este si\\\\prueba\\\\frontend-react\\\\src\\\\components\\\\ControlHorarios.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ControlHorarios.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'https://proyecto-pas-final.onrender.com/api/control-horarios';\nconst USERS_API_URL = 'https://proyecto-pas-final.onrender.com/api/usuarios';\nconst REMOTE_EMPLOYEES_API_URL = 'https://proyecto-pas-final.onrender.com/api/empleados-remotos';\nconst ControlHorarios = () => {\n  _s();\n  const navigate = useNavigate();\n  const [horarios, setHorarios] = useState([]);\n  const [empleados, setEmpleados] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [searchId, setSearchId] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [form, setForm] = useState({\n    empleado_id: '',\n    tipo_empleado: 'usuario',\n    fecha: '',\n    hora_entrada: '',\n    hora_salida: ''\n  });\n  const [editId, setEditId] = useState(null);\n  useEffect(() => {\n    if (!form.empleado_id && empleados.length > 0) {\n      const firstEmp = empleados[0];\n      setForm(prev => ({\n        ...prev,\n        empleado_id: firstEmp.id || firstEmp.uid || '',\n        tipo_empleado: firstEmp.tipo_empleado || 'usuario'\n      }));\n    }\n  }, [empleados, form.empleado_id]);\n  const fetchHorarios = async () => {\n    setLoading(true);\n    try {\n      const res = await fetch(API_URL);\n      if (!res.ok) throw new Error('Error al cargar horarios');\n      const data = await res.json();\n      const dataConNombres = data.map(horario => {\n        const empleado = empleados.find(emp => (emp.id === horario.empleado_id || emp.uid === horario.empleado_id || emp.id === horario.empleado_remoto_id) && emp.tipo_empleado === horario.tipo_empleado);\n        return {\n          ...horario,\n          nombre_completo: horario.nombre_empleado || (empleado ? empleado.nombre_completo || empleado.nombre || empleado.nombre_usuario || '' : '')\n        };\n      });\n      setHorarios(dataConNombres);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchEmpleados = async () => {\n    try {\n      const [usuariosRes, remotosRes] = await Promise.all([fetch(USERS_API_URL), fetch(REMOTE_EMPLOYEES_API_URL)]);\n      if (!usuariosRes.ok) throw new Error('Error al cargar usuarios');\n      if (!remotosRes.ok) throw new Error('Error al cargar empleados remotos');\n      const usuariosData = await usuariosRes.json();\n      const remotosData = await remotosRes.json();\n      const usuariosConTipo = usuariosData.map(u => ({\n        ...u,\n        tipo_empleado: 'usuario'\n      }));\n      const remotosConTipo = remotosData.map(r => ({\n        ...r,\n        tipo_empleado: 'remoto'\n      }));\n      const combinedEmpleados = [...usuariosConTipo, ...remotosConTipo];\n      setEmpleados(combinedEmpleados);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  useEffect(() => {\n    fetchHorarios();\n    fetchEmpleados();\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'empleado_id') {\n      const [id, tipo] = value.split('::');\n      console.log('handleChange empleado_id:', id, 'tipo_empleado:', tipo);\n      setForm(prev => ({\n        ...prev,\n        empleado_id: id,\n        tipo_empleado: tipo\n      }));\n    } else if (name === 'searchId') {\n      setSearchId(value);\n    } else {\n      setForm(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const calcularDuracion = (entrada, salida) => {\n    const [h1, m1] = entrada.split(':').map(Number);\n    const [h2, m2] = salida.split(':').map(Number);\n    let minutos = h2 * 60 + m2 - (h1 * 60 + m1);\n    if (minutos < 0) minutos += 24 * 60;\n    const horas = Math.floor(minutos / 60);\n    const mins = minutos % 60;\n    return `${horas.toString().padStart(2, '0')}h ${mins.toString().padStart(2, '0')}m`;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!form.empleado_id) {\n      setError('Debe seleccionar un empleado válido antes de guardar.');\n      return;\n    }\n    if (!form.fecha || !form.hora_entrada || !form.hora_salida) {\n      setError('Debe completar fecha, hora de entrada y hora de salida.');\n      return;\n    }\n    const duracion = calcularDuracion(form.hora_entrada, form.hora_salida);\n    const formatHora = hora => {\n      if (hora.length === 5) {\n        return hora + ':00';\n      }\n      return hora;\n    };\n    const hora_entrada_formateada = formatHora(form.hora_entrada);\n    const hora_salida_formateada = formatHora(form.hora_salida);\n    try {\n      let payload = {\n        tipo_empleado: form.tipo_empleado,\n        fecha: form.fecha ? new Date(form.fecha).toISOString().split('T')[0] : '',\n        hora_entrada: hora_entrada_formateada,\n        hora_salida: hora_salida_formateada,\n        duracion: duracion\n      };\n      if (form.tipo_empleado === 'remoto') {\n        payload.empleado_remoto_id = Number(form.empleado_id);\n      } else {\n        payload.empleado_id = Number(form.empleado_id);\n      }\n      console.log('Payload final a enviar:', payload);\n      let res;\n      if (editId) {\n        res = await fetch(`${API_URL}/${editId}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n      } else {\n        res = await fetch(`${API_URL}`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n      }\n      if (!res.ok) throw new Error('Error al guardar horario');\n      setForm({\n        empleado_id: '',\n        tipo_empleado: 'usuario',\n        fecha: '',\n        hora_entrada: '',\n        hora_salida: ''\n      });\n      setSearchId('');\n      setEditId(null);\n      setShowForm(false);\n      fetchHorarios();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleEdit = horario => {\n    setForm({\n      empleado_id: horario.empleado_id,\n      tipo_empleado: horario.tipo_empleado || 'usuario',\n      fecha: horario.fecha,\n      hora_entrada: horario.hora_entrada,\n      hora_salida: horario.hora_salida\n    });\n    setSearchId('');\n    setEditId(horario.id);\n    setShowForm(true);\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('¿Estás seguro de eliminar este horario?')) return;\n    try {\n      const res = await fetch(`${API_URL}/${id}`, {\n        method: 'DELETE'\n      });\n      if (!res.ok) throw new Error('Error al eliminar horario');\n      fetchHorarios();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-horarios-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: () => navigate('/home'),\n      children: \"\\u2190 Volver a Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Control Horario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando horarios...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setShowForm(true);\n          setEditId(null);\n          setForm({\n            empleado_id: '',\n            tipo_empleado: 'usuario',\n            fecha: '',\n            hora_entrada: '',\n            hora_salida: ''\n          });\n        },\n        className: \"btn-registrar-horario\",\n        children: \"Registrar Horario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editId ? 'Editar Horario' : 'Registrar Horas'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"control-horarios-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"searchId\",\n            placeholder: \"Buscar empleado por ID\",\n            value: searchId,\n            onChange: handleChange,\n            className: \"search-id-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"empleado_id\",\n            value: `${form.empleado_id}::${form.tipo_empleado}`,\n            onChange: handleChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Seleccione un empleado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), empleados.filter(emp => {\n              if (!searchId) return true;\n              const idEmp = emp.id || emp.uid || '';\n              return idEmp && idEmp.toString().toLowerCase().includes(searchId.toLowerCase());\n            }).map(emp => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: `${emp.id || emp.uid}::${emp.tipo_empleado}`,\n              children: emp.nombre_completo || emp.nombre || emp.nombre_usuario\n            }, emp.id || emp.uid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 23\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"fecha\",\n            value: form.fecha,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"hora_entrada\",\n            value: form.hora_entrada,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"hora_salida\",\n            value: form.hora_salida,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"control-horarios-submit\",\n              children: editId ? 'Guardar cambios' : 'Añadir fichaje'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"control-horarios-cancel\",\n              onClick: () => {\n                setForm({\n                  empleado_id: '',\n                  tipo_empleado: 'usuario',\n                  fecha: '',\n                  hora_entrada: '',\n                  hora_salida: ''\n                });\n                setEditId(null);\n                setError('');\n                setSearchId('');\n                setShowForm(false);\n              },\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fecha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hora entrada\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hora salida\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Duraci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Acciones\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: horarios.map(h => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: h.nombre_completo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: (() => {\n                if (!h.fecha) return '';\n                const diasSemana = ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'];\n                let year, month, day;\n                if (typeof h.fecha === 'string') {\n                  const fechaStr = h.fecha.includes('T') ? h.fecha.split('T')[0] : h.fecha;\n                  [year, month, day] = fechaStr.split('-');\n                } else if (h.fecha instanceof Date) {\n                  year = h.fecha.getFullYear();\n                  month = (h.fecha.getMonth() + 1).toString().padStart(2, '0');\n                  day = h.fecha.getDate().toString().padStart(2, '0');\n                } else {\n                  return '';\n                }\n                if (!year || !month || !day) return '';\n                const fechaObj = new Date(Number(year), Number(month) - 1, Number(day));\n                const diaSemana = diasSemana[fechaObj.getDay()];\n                return `${diaSemana}, ${day}/${month}/${year}`;\n              })()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: h.hora_entrada\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: h.hora_salida\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: h.duracion\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(h),\n                className: \"btn-edit\",\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(h.id),\n                className: \"btn-delete\",\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this)]\n          }, h.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(ControlHorarios, \"MzPB0ciOQk3oIVfkbqQ+U1XCzAM=\", false, function () {\n  return [useNavigate];\n});\n_c = ControlHorarios;\nexport default ControlHorarios;\nvar _c;\n$RefreshReg$(_c, \"ControlHorarios\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","USERS_API_URL","REMOTE_EMPLOYEES_API_URL","ControlHorarios","_s","navigate","horarios","setHorarios","empleados","setEmpleados","loading","setLoading","error","setError","searchId","setSearchId","showForm","setShowForm","form","setForm","empleado_id","tipo_empleado","fecha","hora_entrada","hora_salida","editId","setEditId","length","firstEmp","prev","id","uid","fetchHorarios","res","fetch","ok","Error","data","json","dataConNombres","map","horario","empleado","find","emp","empleado_remoto_id","nombre_completo","nombre_empleado","nombre","nombre_usuario","err","message","fetchEmpleados","usuariosRes","remotosRes","Promise","all","usuariosData","remotosData","usuariosConTipo","u","remotosConTipo","r","combinedEmpleados","handleChange","e","name","value","target","tipo","split","console","log","calcularDuracion","entrada","salida","h1","m1","Number","h2","m2","minutos","horas","Math","floor","mins","toString","padStart","handleSubmit","preventDefault","duracion","formatHora","hora","hora_entrada_formateada","hora_salida_formateada","payload","Date","toISOString","method","headers","body","JSON","stringify","handleEdit","handleDelete","window","confirm","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","filter","idEmp","toLowerCase","includes","h","diasSemana","year","month","day","fechaStr","getFullYear","getMonth","getDate","fechaObj","diaSemana","getDay","_c","$RefreshReg$"],"sources":["C:/Users/gabyg/Downloads/prueba este si/prueba/frontend-react/src/components/ControlHorarios.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ControlHorarios.css';\r\n\r\nconst API_URL = 'https://proyecto-pas-final.onrender.com/api/control-horarios';\r\nconst USERS_API_URL = 'https://proyecto-pas-final.onrender.com/api/usuarios';\r\nconst REMOTE_EMPLOYEES_API_URL = 'https://proyecto-pas-final.onrender.com/api/empleados-remotos';\r\n\r\nconst ControlHorarios = () => {\r\n  const navigate = useNavigate();\r\n  const [horarios, setHorarios] = useState([]);\r\n  const [empleados, setEmpleados] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [searchId, setSearchId] = useState('');\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [form, setForm] = useState({\r\n    empleado_id: '',\r\n    tipo_empleado: 'usuario',\r\n    fecha: '',\r\n    hora_entrada: '',\r\n    hora_salida: '',\r\n  });\r\n  const [editId, setEditId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!form.empleado_id && empleados.length > 0) {\r\n      const firstEmp = empleados[0];\r\n      setForm((prev) => ({\r\n        ...prev,\r\n        empleado_id: firstEmp.id || firstEmp.uid || '',\r\n        tipo_empleado: firstEmp.tipo_empleado || 'usuario',\r\n      }));\r\n    }\r\n  }, [empleados, form.empleado_id]);\r\n\r\n  const fetchHorarios = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(API_URL);\r\n      if (!res.ok) throw new Error('Error al cargar horarios');\r\n      const data = await res.json();\r\n\r\n      const dataConNombres = data.map((horario) => {\r\n        const empleado = empleados.find(\r\n          (emp) =>\r\n            (emp.id === horario.empleado_id || emp.uid === horario.empleado_id || emp.id === horario.empleado_remoto_id) &&\r\n            emp.tipo_empleado === horario.tipo_empleado\r\n        );\r\n        return {\r\n          ...horario,\r\n          nombre_completo: horario.nombre_empleado || (empleado\r\n            ? empleado.nombre_completo || empleado.nombre || empleado.nombre_usuario || ''\r\n            : ''),\r\n        };\r\n      });\r\n\r\n      setHorarios(dataConNombres);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchEmpleados = async () => {\r\n    try {\r\n      const [usuariosRes, remotosRes] = await Promise.all([\r\n        fetch(USERS_API_URL),\r\n        fetch(REMOTE_EMPLOYEES_API_URL),\r\n      ]);\r\n      if (!usuariosRes.ok) throw new Error('Error al cargar usuarios');\r\n      if (!remotosRes.ok) throw new Error('Error al cargar empleados remotos');\r\n      const usuariosData = await usuariosRes.json();\r\n      const remotosData = await remotosRes.json();\r\n      const usuariosConTipo = usuariosData.map((u) => ({ ...u, tipo_empleado: 'usuario' }));\r\n      const remotosConTipo = remotosData.map((r) => ({ ...r, tipo_empleado: 'remoto' }));\r\n      const combinedEmpleados = [...usuariosConTipo, ...remotosConTipo];\r\n      setEmpleados(combinedEmpleados);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHorarios();\r\n    fetchEmpleados();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'empleado_id') {\r\n      const [id, tipo] = value.split('::');\r\n      console.log('handleChange empleado_id:', id, 'tipo_empleado:', tipo);\r\n      setForm((prev) => ({ ...prev, empleado_id: id, tipo_empleado: tipo }));\r\n    } else if (name === 'searchId') {\r\n      setSearchId(value);\r\n    } else {\r\n      setForm((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n\r\n  const calcularDuracion = (entrada, salida) => {\r\n    const [h1, m1] = entrada.split(':').map(Number);\r\n    const [h2, m2] = salida.split(':').map(Number);\r\n    let minutos = (h2 * 60 + m2) - (h1 * 60 + m1);\r\n    if (minutos < 0) minutos += 24 * 60;\r\n    const horas = Math.floor(minutos / 60);\r\n    const mins = minutos % 60;\r\n    return `${horas.toString().padStart(2, '0')}h ${mins.toString().padStart(2, '0')}m`;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!form.empleado_id) {\r\n      setError('Debe seleccionar un empleado válido antes de guardar.');\r\n      return;\r\n    }\r\n    if (!form.fecha || !form.hora_entrada || !form.hora_salida) {\r\n      setError('Debe completar fecha, hora de entrada y hora de salida.');\r\n      return;\r\n    }\r\n    const duracion = calcularDuracion(form.hora_entrada, form.hora_salida);\r\n\r\n    const formatHora = (hora) => {\r\n      if (hora.length === 5) {\r\n        return hora + ':00';\r\n      }\r\n      return hora;\r\n    };\r\n\r\n    const hora_entrada_formateada = formatHora(form.hora_entrada);\r\n    const hora_salida_formateada = formatHora(form.hora_salida);\r\n\r\n    try {\r\n      let payload = {\r\n        tipo_empleado: form.tipo_empleado,\r\n        fecha: form.fecha ? new Date(form.fecha).toISOString().split('T')[0] : '',\r\n        hora_entrada: hora_entrada_formateada,\r\n        hora_salida: hora_salida_formateada,\r\n        duracion: duracion,\r\n      };\r\n      if (form.tipo_empleado === 'remoto') {\r\n        payload.empleado_remoto_id = Number(form.empleado_id);\r\n      } else {\r\n        payload.empleado_id = Number(form.empleado_id);\r\n      }\r\n      console.log('Payload final a enviar:', payload);\r\n      let res;\r\n      if (editId) {\r\n        res = await fetch(`${API_URL}/${editId}`, {\r\n          method: 'PUT',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload),\r\n        });\r\n      } else {\r\n        res = await fetch(`${API_URL}`, {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(payload),\r\n        });\r\n      }\r\n      if (!res.ok) throw new Error('Error al guardar horario');\r\n      setForm({ empleado_id: '', tipo_empleado: 'usuario', fecha: '', hora_entrada: '', hora_salida: '' });\r\n      setSearchId('');\r\n      setEditId(null);\r\n      setShowForm(false);\r\n      fetchHorarios();\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (horario) => {\r\n    setForm({\r\n      empleado_id: horario.empleado_id,\r\n      tipo_empleado: horario.tipo_empleado || 'usuario',\r\n      fecha: horario.fecha,\r\n      hora_entrada: horario.hora_entrada,\r\n      hora_salida: horario.hora_salida,\r\n    });\r\n    setSearchId('');\r\n    setEditId(horario.id);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('¿Estás seguro de eliminar este horario?')) return;\r\n    try {\r\n      const res = await fetch(`${API_URL}/${id}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (!res.ok) throw new Error('Error al eliminar horario');\r\n      fetchHorarios();\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"control-horarios-container\">\r\n      <button className=\"back-button\" onClick={() => navigate('/home')}>\r\n        ← Volver a Home\r\n      </button>\r\n      <h2>Control Horario</h2>\r\n      {error && <p className=\"error-message\">Error: {error}</p>}\r\n      {loading ? (\r\n        <p>Cargando horarios...</p>\r\n      ) : (\r\n        <>\r\n          <button \r\n            onClick={() => {\r\n              setShowForm(true);\r\n              setEditId(null);\r\n              setForm({ empleado_id: '', tipo_empleado: 'usuario', fecha: '', hora_entrada: '', hora_salida: '' });\r\n            }} \r\n            className=\"btn-registrar-horario\"\r\n          >\r\n            Registrar Horario\r\n          </button>\r\n          \r\n          {showForm && (\r\n            <div className=\"form-container\">\r\n              <h3>{editId ? 'Editar Horario' : 'Registrar Horas'}</h3>\r\n              <form onSubmit={handleSubmit} className=\"control-horarios-form\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"searchId\"\r\n                  placeholder=\"Buscar empleado por ID\"\r\n                  value={searchId}\r\n                  onChange={handleChange}\r\n                  className=\"search-id-input\"\r\n                />\r\n                <select\r\n                  name=\"empleado_id\"\r\n                  value={`${form.empleado_id}::${form.tipo_empleado}`}\r\n                  onChange={handleChange}\r\n                  required\r\n                >\r\n                  <option value=\"\" disabled>Seleccione un empleado</option>\r\n                  {empleados\r\n                    .filter((emp) => {\r\n                      if (!searchId) return true;\r\n                      const idEmp = emp.id || emp.uid || '';\r\n                      return idEmp && idEmp.toString().toLowerCase().includes(searchId.toLowerCase());\r\n                    })\r\n                    .map((emp) => (\r\n                      <option key={emp.id || emp.uid} value={`${emp.id || emp.uid}::${emp.tipo_empleado}`}>\r\n                        {emp.nombre_completo || emp.nombre || emp.nombre_usuario}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"fecha\"\r\n                  value={form.fecha}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"time\"\r\n                  name=\"hora_entrada\"\r\n                  value={form.hora_entrada}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <input\r\n                  type=\"time\"\r\n                  name=\"hora_salida\"\r\n                  value={form.hora_salida}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <div className=\"form-buttons\">\r\n                  <button type=\"submit\" className=\"control-horarios-submit\">\r\n                    {editId ? 'Guardar cambios' : 'Añadir fichaje'}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"control-horarios-cancel\"\r\n                    onClick={() => {\r\n                      setForm({ empleado_id: '', tipo_empleado: 'usuario', fecha: '', hora_entrada: '', hora_salida: '' });\r\n                      setEditId(null);\r\n                      setError('');\r\n                      setSearchId('');\r\n                      setShowForm(false);\r\n                    }}\r\n                  >\r\n                    Cancelar\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Nombre</th>\r\n                <th>Fecha</th>\r\n                <th>Hora entrada</th>\r\n                <th>Hora salida</th>\r\n                <th>Duración</th>\r\n                <th>Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {horarios.map((h) => (\r\n                <tr key={h.id}>\r\n                  <td>{h.nombre_completo}</td>\r\n                  <td>{(() => {\r\n                    if (!h.fecha) return '';\r\n                    const diasSemana = ['domingo', 'lunes', 'martes', 'miércoles', 'jueves', 'viernes', 'sábado'];\r\n                    let year, month, day;\r\n                    if (typeof h.fecha === 'string') {\r\n                      const fechaStr = h.fecha.includes('T') ? h.fecha.split('T')[0] : h.fecha;\r\n                      [year, month, day] = fechaStr.split('-');\r\n                    } else if (h.fecha instanceof Date) {\r\n                      year = h.fecha.getFullYear();\r\n                      month = (h.fecha.getMonth() + 1).toString().padStart(2, '0');\r\n                      day = h.fecha.getDate().toString().padStart(2, '0');\r\n                    } else {\r\n                      return '';\r\n                    }\r\n                    if (!year || !month || !day) return '';\r\n                    const fechaObj = new Date(Number(year), Number(month) - 1, Number(day));\r\n                    const diaSemana = diasSemana[fechaObj.getDay()];\r\n                    return `${diaSemana}, ${day}/${month}/${year}`;\r\n                  })()}</td>\r\n                  <td>{h.hora_entrada}</td>\r\n                  <td>{h.hora_salida}</td>\r\n                  <td>{h.duracion}</td>\r\n                  <td>\r\n                    <button onClick={() => handleEdit(h)} className=\"btn-edit\">Editar</button>\r\n                    <button onClick={() => handleDelete(h.id)} className=\"btn-delete\">Eliminar</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ControlHorarios;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,OAAO,GAAG,8DAA8D;AAC9E,MAAMC,aAAa,GAAG,sDAAsD;AAC5E,MAAMC,wBAAwB,GAAG,+DAA+D;AAEhG,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACyB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC;IAC/B2B,WAAW,EAAE,EAAE;IACfC,aAAa,EAAE,SAAS;IACxBC,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE,EAAE;IAChBC,WAAW,EAAE;EACf,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,IAAI,CAACwB,IAAI,CAACE,WAAW,IAAIZ,SAAS,CAACmB,MAAM,GAAG,CAAC,EAAE;MAC7C,MAAMC,QAAQ,GAAGpB,SAAS,CAAC,CAAC,CAAC;MAC7BW,OAAO,CAAEU,IAAI,KAAM;QACjB,GAAGA,IAAI;QACPT,WAAW,EAAEQ,QAAQ,CAACE,EAAE,IAAIF,QAAQ,CAACG,GAAG,IAAI,EAAE;QAC9CV,aAAa,EAAEO,QAAQ,CAACP,aAAa,IAAI;MAC3C,CAAC,CAAC,CAAC;IACL;EACF,CAAC,EAAE,CAACb,SAAS,EAAEU,IAAI,CAACE,WAAW,CAAC,CAAC;EAEjC,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCrB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMsB,GAAG,GAAG,MAAMC,KAAK,CAAClC,OAAO,CAAC;MAChC,IAAI,CAACiC,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MACxD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAE7B,MAAMC,cAAc,GAAGF,IAAI,CAACG,GAAG,CAAEC,OAAO,IAAK;QAC3C,MAAMC,QAAQ,GAAGlC,SAAS,CAACmC,IAAI,CAC5BC,GAAG,IACF,CAACA,GAAG,CAACd,EAAE,KAAKW,OAAO,CAACrB,WAAW,IAAIwB,GAAG,CAACb,GAAG,KAAKU,OAAO,CAACrB,WAAW,IAAIwB,GAAG,CAACd,EAAE,KAAKW,OAAO,CAACI,kBAAkB,KAC3GD,GAAG,CAACvB,aAAa,KAAKoB,OAAO,CAACpB,aAClC,CAAC;QACD,OAAO;UACL,GAAGoB,OAAO;UACVK,eAAe,EAAEL,OAAO,CAACM,eAAe,KAAKL,QAAQ,GACjDA,QAAQ,CAACI,eAAe,IAAIJ,QAAQ,CAACM,MAAM,IAAIN,QAAQ,CAACO,cAAc,IAAI,EAAE,GAC5E,EAAE;QACR,CAAC;MACH,CAAC,CAAC;MAEF1C,WAAW,CAACgC,cAAc,CAAC;IAC7B,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZrC,QAAQ,CAACqC,GAAG,CAACC,OAAO,CAAC;IACvB,CAAC,SAAS;MACRxC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMyC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAM,CAACC,WAAW,EAAEC,UAAU,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAClDtB,KAAK,CAACjC,aAAa,CAAC,EACpBiC,KAAK,CAAChC,wBAAwB,CAAC,CAChC,CAAC;MACF,IAAI,CAACmD,WAAW,CAAClB,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAChE,IAAI,CAACkB,UAAU,CAACnB,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;MACxE,MAAMqB,YAAY,GAAG,MAAMJ,WAAW,CAACf,IAAI,CAAC,CAAC;MAC7C,MAAMoB,WAAW,GAAG,MAAMJ,UAAU,CAAChB,IAAI,CAAC,CAAC;MAC3C,MAAMqB,eAAe,GAAGF,YAAY,CAACjB,GAAG,CAAEoB,CAAC,KAAM;QAAE,GAAGA,CAAC;QAAEvC,aAAa,EAAE;MAAU,CAAC,CAAC,CAAC;MACrF,MAAMwC,cAAc,GAAGH,WAAW,CAAClB,GAAG,CAAEsB,CAAC,KAAM;QAAE,GAAGA,CAAC;QAAEzC,aAAa,EAAE;MAAS,CAAC,CAAC,CAAC;MAClF,MAAM0C,iBAAiB,GAAG,CAAC,GAAGJ,eAAe,EAAE,GAAGE,cAAc,CAAC;MACjEpD,YAAY,CAACsD,iBAAiB,CAAC;IACjC,CAAC,CAAC,OAAOb,GAAG,EAAE;MACZrC,QAAQ,CAACqC,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAEDzD,SAAS,CAAC,MAAM;IACdsC,aAAa,CAAC,CAAC;IACfoB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChC,IAAIF,IAAI,KAAK,aAAa,EAAE;MAC1B,MAAM,CAACpC,EAAE,EAAEuC,IAAI,CAAC,GAAGF,KAAK,CAACG,KAAK,CAAC,IAAI,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAE1C,EAAE,EAAE,gBAAgB,EAAEuC,IAAI,CAAC;MACpElD,OAAO,CAAEU,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAET,WAAW,EAAEU,EAAE;QAAET,aAAa,EAAEgD;MAAK,CAAC,CAAC,CAAC;IACxE,CAAC,MAAM,IAAIH,IAAI,KAAK,UAAU,EAAE;MAC9BnD,WAAW,CAACoD,KAAK,CAAC;IACpB,CAAC,MAAM;MACLhD,OAAO,CAAEU,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACqC,IAAI,GAAGC;MAAM,CAAC,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAMM,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC5C,MAAM,CAACC,EAAE,EAAEC,EAAE,CAAC,GAAGH,OAAO,CAACJ,KAAK,CAAC,GAAG,CAAC,CAAC9B,GAAG,CAACsC,MAAM,CAAC;IAC/C,MAAM,CAACC,EAAE,EAAEC,EAAE,CAAC,GAAGL,MAAM,CAACL,KAAK,CAAC,GAAG,CAAC,CAAC9B,GAAG,CAACsC,MAAM,CAAC;IAC9C,IAAIG,OAAO,GAAIF,EAAE,GAAG,EAAE,GAAGC,EAAE,IAAKJ,EAAE,GAAG,EAAE,GAAGC,EAAE,CAAC;IAC7C,IAAII,OAAO,GAAG,CAAC,EAAEA,OAAO,IAAI,EAAE,GAAG,EAAE;IACnC,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;IACtC,MAAMI,IAAI,GAAGJ,OAAO,GAAG,EAAE;IACzB,OAAO,GAAGC,KAAK,CAACI,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KAAKF,IAAI,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG;EACrF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOvB,CAAC,IAAK;IAChCA,CAAC,CAACwB,cAAc,CAAC,CAAC;IAClB,IAAI,CAACvE,IAAI,CAACE,WAAW,EAAE;MACrBP,QAAQ,CAAC,uDAAuD,CAAC;MACjE;IACF;IACA,IAAI,CAACK,IAAI,CAACI,KAAK,IAAI,CAACJ,IAAI,CAACK,YAAY,IAAI,CAACL,IAAI,CAACM,WAAW,EAAE;MAC1DX,QAAQ,CAAC,yDAAyD,CAAC;MACnE;IACF;IACA,MAAM6E,QAAQ,GAAGjB,gBAAgB,CAACvD,IAAI,CAACK,YAAY,EAAEL,IAAI,CAACM,WAAW,CAAC;IAEtE,MAAMmE,UAAU,GAAIC,IAAI,IAAK;MAC3B,IAAIA,IAAI,CAACjE,MAAM,KAAK,CAAC,EAAE;QACrB,OAAOiE,IAAI,GAAG,KAAK;MACrB;MACA,OAAOA,IAAI;IACb,CAAC;IAED,MAAMC,uBAAuB,GAAGF,UAAU,CAACzE,IAAI,CAACK,YAAY,CAAC;IAC7D,MAAMuE,sBAAsB,GAAGH,UAAU,CAACzE,IAAI,CAACM,WAAW,CAAC;IAE3D,IAAI;MACF,IAAIuE,OAAO,GAAG;QACZ1E,aAAa,EAAEH,IAAI,CAACG,aAAa;QACjCC,KAAK,EAAEJ,IAAI,CAACI,KAAK,GAAG,IAAI0E,IAAI,CAAC9E,IAAI,CAACI,KAAK,CAAC,CAAC2E,WAAW,CAAC,CAAC,CAAC3B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;QACzE/C,YAAY,EAAEsE,uBAAuB;QACrCrE,WAAW,EAAEsE,sBAAsB;QACnCJ,QAAQ,EAAEA;MACZ,CAAC;MACD,IAAIxE,IAAI,CAACG,aAAa,KAAK,QAAQ,EAAE;QACnC0E,OAAO,CAAClD,kBAAkB,GAAGiC,MAAM,CAAC5D,IAAI,CAACE,WAAW,CAAC;MACvD,CAAC,MAAM;QACL2E,OAAO,CAAC3E,WAAW,GAAG0D,MAAM,CAAC5D,IAAI,CAACE,WAAW,CAAC;MAChD;MACAmD,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEuB,OAAO,CAAC;MAC/C,IAAI9D,GAAG;MACP,IAAIR,MAAM,EAAE;QACVQ,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGlC,OAAO,IAAIyB,MAAM,EAAE,EAAE;UACxCyE,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;QAC9B,CAAC,CAAC;MACJ,CAAC,MAAM;QACL9D,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGlC,OAAO,EAAE,EAAE;UAC9BkG,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;QAC9B,CAAC,CAAC;MACJ;MACA,IAAI,CAAC9D,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MACxDjB,OAAO,CAAC;QAAEC,WAAW,EAAE,EAAE;QAAEC,aAAa,EAAE,SAAS;QAAEC,KAAK,EAAE,EAAE;QAAEC,YAAY,EAAE,EAAE;QAAEC,WAAW,EAAE;MAAG,CAAC,CAAC;MACpGT,WAAW,CAAC,EAAE,CAAC;MACfW,SAAS,CAAC,IAAI,CAAC;MACfT,WAAW,CAAC,KAAK,CAAC;MAClBe,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZrC,QAAQ,CAACqC,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAED,MAAMoD,UAAU,GAAI9D,OAAO,IAAK;IAC9BtB,OAAO,CAAC;MACNC,WAAW,EAAEqB,OAAO,CAACrB,WAAW;MAChCC,aAAa,EAAEoB,OAAO,CAACpB,aAAa,IAAI,SAAS;MACjDC,KAAK,EAAEmB,OAAO,CAACnB,KAAK;MACpBC,YAAY,EAAEkB,OAAO,CAAClB,YAAY;MAClCC,WAAW,EAAEiB,OAAO,CAACjB;IACvB,CAAC,CAAC;IACFT,WAAW,CAAC,EAAE,CAAC;IACfW,SAAS,CAACe,OAAO,CAACX,EAAE,CAAC;IACrBb,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMuF,YAAY,GAAG,MAAO1E,EAAE,IAAK;IACjC,IAAI,CAAC2E,MAAM,CAACC,OAAO,CAAC,yCAAyC,CAAC,EAAE;IAChE,IAAI;MACF,MAAMzE,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGlC,OAAO,IAAI8B,EAAE,EAAE,EAAE;QAC1CoE,MAAM,EAAE;MACV,CAAC,CAAC;MACF,IAAI,CAACjE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MACzDJ,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZrC,QAAQ,CAACqC,GAAG,CAACC,OAAO,CAAC;IACvB;EACF,CAAC;EAED,oBACEtD,OAAA;IAAK8G,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACzC/G,OAAA;MAAQ8G,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEA,CAAA,KAAMxG,QAAQ,CAAC,OAAO,CAAE;MAAAuG,QAAA,EAAC;IAElE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTpH,OAAA;MAAA+G,QAAA,EAAI;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBrG,KAAK,iBAAIf,OAAA;MAAG8G,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,SAAO,EAAChG,KAAK;IAAA;MAAAkG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxDvG,OAAO,gBACNb,OAAA;MAAA+G,QAAA,EAAG;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE3BpH,OAAA,CAAAE,SAAA;MAAA6G,QAAA,gBACE/G,OAAA;QACEgH,OAAO,EAAEA,CAAA,KAAM;UACb5F,WAAW,CAAC,IAAI,CAAC;UACjBS,SAAS,CAAC,IAAI,CAAC;UACfP,OAAO,CAAC;YAAEC,WAAW,EAAE,EAAE;YAAEC,aAAa,EAAE,SAAS;YAAEC,KAAK,EAAE,EAAE;YAAEC,YAAY,EAAE,EAAE;YAAEC,WAAW,EAAE;UAAG,CAAC,CAAC;QACtG,CAAE;QACFmF,SAAS,EAAC,uBAAuB;QAAAC,QAAA,EAClC;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAERjG,QAAQ,iBACPnB,OAAA;QAAK8G,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B/G,OAAA;UAAA+G,QAAA,EAAKnF,MAAM,GAAG,gBAAgB,GAAG;QAAiB;UAAAqF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxDpH,OAAA;UAAMqH,QAAQ,EAAE1B,YAAa;UAACmB,SAAS,EAAC,uBAAuB;UAAAC,QAAA,gBAC7D/G,OAAA;YACEsH,IAAI,EAAC,MAAM;YACXjD,IAAI,EAAC,UAAU;YACfkD,WAAW,EAAC,wBAAwB;YACpCjD,KAAK,EAAErD,QAAS;YAChBuG,QAAQ,EAAErD,YAAa;YACvB2C,SAAS,EAAC;UAAiB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACFpH,OAAA;YACEqE,IAAI,EAAC,aAAa;YAClBC,KAAK,EAAE,GAAGjD,IAAI,CAACE,WAAW,KAAKF,IAAI,CAACG,aAAa,EAAG;YACpDgG,QAAQ,EAAErD,YAAa;YACvBsD,QAAQ;YAAAV,QAAA,gBAER/G,OAAA;cAAQsE,KAAK,EAAC,EAAE;cAACoD,QAAQ;cAAAX,QAAA,EAAC;YAAsB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EACxDzG,SAAS,CACPgH,MAAM,CAAE5E,GAAG,IAAK;cACf,IAAI,CAAC9B,QAAQ,EAAE,OAAO,IAAI;cAC1B,MAAM2G,KAAK,GAAG7E,GAAG,CAACd,EAAE,IAAIc,GAAG,CAACb,GAAG,IAAI,EAAE;cACrC,OAAO0F,KAAK,IAAIA,KAAK,CAACnC,QAAQ,CAAC,CAAC,CAACoC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC7G,QAAQ,CAAC4G,WAAW,CAAC,CAAC,CAAC;YACjF,CAAC,CAAC,CACDlF,GAAG,CAAEI,GAAG,iBACP/C,OAAA;cAAgCsE,KAAK,EAAE,GAAGvB,GAAG,CAACd,EAAE,IAAIc,GAAG,CAACb,GAAG,KAAKa,GAAG,CAACvB,aAAa,EAAG;cAAAuF,QAAA,EACjFhE,GAAG,CAACE,eAAe,IAAIF,GAAG,CAACI,MAAM,IAAIJ,GAAG,CAACK;YAAc,GAD7CL,GAAG,CAACd,EAAE,IAAIc,GAAG,CAACb,GAAG;cAAA+E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEtB,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACTpH,OAAA;YACEsH,IAAI,EAAC,MAAM;YACXjD,IAAI,EAAC,OAAO;YACZC,KAAK,EAAEjD,IAAI,CAACI,KAAM;YAClB+F,QAAQ,EAAErD,YAAa;YACvBsD,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFpH,OAAA;YACEsH,IAAI,EAAC,MAAM;YACXjD,IAAI,EAAC,cAAc;YACnBC,KAAK,EAAEjD,IAAI,CAACK,YAAa;YACzB8F,QAAQ,EAAErD,YAAa;YACvBsD,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFpH,OAAA;YACEsH,IAAI,EAAC,MAAM;YACXjD,IAAI,EAAC,aAAa;YAClBC,KAAK,EAAEjD,IAAI,CAACM,WAAY;YACxB6F,QAAQ,EAAErD,YAAa;YACvBsD,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFpH,OAAA;YAAK8G,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B/G,OAAA;cAAQsH,IAAI,EAAC,QAAQ;cAACR,SAAS,EAAC,yBAAyB;cAAAC,QAAA,EACtDnF,MAAM,GAAG,iBAAiB,GAAG;YAAgB;cAAAqF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,eACTpH,OAAA;cACEsH,IAAI,EAAC,QAAQ;cACbR,SAAS,EAAC,yBAAyB;cACnCE,OAAO,EAAEA,CAAA,KAAM;gBACb1F,OAAO,CAAC;kBAAEC,WAAW,EAAE,EAAE;kBAAEC,aAAa,EAAE,SAAS;kBAAEC,KAAK,EAAE,EAAE;kBAAEC,YAAY,EAAE,EAAE;kBAAEC,WAAW,EAAE;gBAAG,CAAC,CAAC;gBACpGE,SAAS,CAAC,IAAI,CAAC;gBACfb,QAAQ,CAAC,EAAE,CAAC;gBACZE,WAAW,CAAC,EAAE,CAAC;gBACfE,WAAW,CAAC,KAAK,CAAC;cACpB,CAAE;cAAA2F,QAAA,EACH;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACN,eAEDpH,OAAA;QAAA+G,QAAA,gBACE/G,OAAA;UAAA+G,QAAA,eACE/G,OAAA;YAAA+G,QAAA,gBACE/G,OAAA;cAAA+G,QAAA,EAAI;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACfpH,OAAA;cAAA+G,QAAA,EAAI;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACdpH,OAAA;cAAA+G,QAAA,EAAI;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrBpH,OAAA;cAAA+G,QAAA,EAAI;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBpH,OAAA;cAAA+G,QAAA,EAAI;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBpH,OAAA;cAAA+G,QAAA,EAAI;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRpH,OAAA;UAAA+G,QAAA,EACGtG,QAAQ,CAACkC,GAAG,CAAEoF,CAAC,iBACd/H,OAAA;YAAA+G,QAAA,gBACE/G,OAAA;cAAA+G,QAAA,EAAKgB,CAAC,CAAC9E;YAAe;cAAAgE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC5BpH,OAAA;cAAA+G,QAAA,EAAK,CAAC,MAAM;gBACV,IAAI,CAACgB,CAAC,CAACtG,KAAK,EAAE,OAAO,EAAE;gBACvB,MAAMuG,UAAU,GAAG,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;gBAC7F,IAAIC,IAAI,EAAEC,KAAK,EAAEC,GAAG;gBACpB,IAAI,OAAOJ,CAAC,CAACtG,KAAK,KAAK,QAAQ,EAAE;kBAC/B,MAAM2G,QAAQ,GAAGL,CAAC,CAACtG,KAAK,CAACqG,QAAQ,CAAC,GAAG,CAAC,GAAGC,CAAC,CAACtG,KAAK,CAACgD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAGsD,CAAC,CAACtG,KAAK;kBACxE,CAACwG,IAAI,EAAEC,KAAK,EAAEC,GAAG,CAAC,GAAGC,QAAQ,CAAC3D,KAAK,CAAC,GAAG,CAAC;gBAC1C,CAAC,MAAM,IAAIsD,CAAC,CAACtG,KAAK,YAAY0E,IAAI,EAAE;kBAClC8B,IAAI,GAAGF,CAAC,CAACtG,KAAK,CAAC4G,WAAW,CAAC,CAAC;kBAC5BH,KAAK,GAAG,CAACH,CAAC,CAACtG,KAAK,CAAC6G,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE7C,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;kBAC5DyC,GAAG,GAAGJ,CAAC,CAACtG,KAAK,CAAC8G,OAAO,CAAC,CAAC,CAAC9C,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;gBACrD,CAAC,MAAM;kBACL,OAAO,EAAE;gBACX;gBACA,IAAI,CAACuC,IAAI,IAAI,CAACC,KAAK,IAAI,CAACC,GAAG,EAAE,OAAO,EAAE;gBACtC,MAAMK,QAAQ,GAAG,IAAIrC,IAAI,CAAClB,MAAM,CAACgD,IAAI,CAAC,EAAEhD,MAAM,CAACiD,KAAK,CAAC,GAAG,CAAC,EAAEjD,MAAM,CAACkD,GAAG,CAAC,CAAC;gBACvE,MAAMM,SAAS,GAAGT,UAAU,CAACQ,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAC;gBAC/C,OAAO,GAAGD,SAAS,KAAKN,GAAG,IAAID,KAAK,IAAID,IAAI,EAAE;cAChD,CAAC,EAAE;YAAC;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACVpH,OAAA;cAAA+G,QAAA,EAAKgB,CAAC,CAACrG;YAAY;cAAAuF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACzBpH,OAAA;cAAA+G,QAAA,EAAKgB,CAAC,CAACpG;YAAW;cAAAsF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBpH,OAAA;cAAA+G,QAAA,EAAKgB,CAAC,CAAClC;YAAQ;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBpH,OAAA;cAAA+G,QAAA,gBACE/G,OAAA;gBAAQgH,OAAO,EAAEA,CAAA,KAAMN,UAAU,CAACqB,CAAC,CAAE;gBAACjB,SAAS,EAAC,UAAU;gBAAAC,QAAA,EAAC;cAAM;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1EpH,OAAA;gBAAQgH,OAAO,EAAEA,CAAA,KAAML,YAAY,CAACoB,CAAC,CAAC9F,EAAE,CAAE;gBAAC6E,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAQ;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjF,CAAC;UAAA,GA3BEW,CAAC,CAAC9F,EAAE;YAAAgF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA4BT,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eACR,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7G,EAAA,CAhVID,eAAe;EAAA,QACFR,WAAW;AAAA;AAAA6I,EAAA,GADxBrI,eAAe;AAkVrB,eAAeA,eAAe;AAAC,IAAAqI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}